#include "keys_ru.h"
#include <dt-bindings/zmk/input_transform.h>
#include <input/processors.dtsi>
#include <zephyr/dt-bindings/input/input-event-codes.h>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/pointing.h>

&lt { tapping-term-ms = <125>; };

&mt {
    tapping-term-ms = <125>;
    flavor = "tap-preferred";
};

/ {
    behaviors {
        cap_sen: cap_sen {
            compatible = "zmk,behavior-hold-tap";
            label = "CAP_SEN";
            bindings = <&mo>, <&mkp>;

            #binding-cells = <2>;
            tapping-term-ms = <150>;
            hold-while-undecided;
        };
    };

    combos {
        compatible = "zmk,combos";

        cmben {
            bindings = <&layer_en>;
            key-positions = <3 4>;
            layers = <1>;
        };

        cmbru {
            bindings = <&layer_ru>;
            key-positions = <3 4>;
            layers = <0>;
        };
    };

    macros {
        layer_en: layer_en {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&to 0 &ru_en_switch>;
            label = "LAYER_EN";
        };

        layer_ru: layer_ru {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&to 1 &ru_en_switch>;
            label = "LAYER_RU";
        };

        en: en {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings =
                <&ru_en_switch &macro_param_1to1 &kp MACRO_PLACEHOLDER>,
                <&macro_wait_time 50>,
                <&ru_en_switch>,
                <&macro_wait_time 50>;

            label = "EN";
        };

        sen_mo: sen_mo {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings =
                <&macro_press>,
                <&macro_param_1to1 &mo MACRO_PLACEHOLDER>,
                <&macro_pause_for_release>,
                <&macro_wait_time 15>,
                <&macro_release>,
                <&macro_param_1to1 &mo MACRO_PLACEHOLDER>;

            label = "SEN_MO";
        };

        ru_en_switch: ru_en_switch {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LG(SPACE)>;
            label = "RU_EN_SWITCH";
        };

        shift_mo: shift_mo {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings =
                <&macro_press>,
                <&macro_param_1to1 &mo MACRO_PLACEHOLDER &kp LSHIFT>,
                <&macro_pause_for_release>,
                <&macro_release>,
                <&macro_param_1to1 &mo MACRO_PLACEHOLDER &kp LEFT_SHIFT>;

            label = "SHIFT_MO";
        };

        shift_en_mo: shift_en_mo {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings =
                <&macro_tap>,
                <&ru_en_switch>,
                <&macro_press>,
                <&macro_param_1to1 &mo MACRO_PLACEHOLDER &kp LEFT_SHIFT>,
                <&macro_pause_for_release>,
                <&macro_release>,
                <&macro_param_1to1 &kp MACRO_PLACEHOLDER &kp LEFT_SHIFT>,
                <&macro_tap>,
                <&ru_en_switch>;

            label = "SHIFT_EN_MO";
        };

        en_mo: en_mo {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings =
                <&macro_tap>,
                <&ru_en_switch>,
                <&macro_press>,
                <&macro_param_1to1 &mo MACRO_PLACEHOLDER>,
                <&macro_pause_for_release>,
                <&macro_release>,
                <&macro_param_1to1 &mo MACRO_PLACEHOLDER>,
                <&macro_tap>,
                <&ru_en_switch>;

            label = "EN_MO";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        en {
            bindings = <
&trans   &kp Q           &kp W           &kp E             &kp R               &kp T                                  &kp Y        &kp U                &kp I              &kp O           &kp P               &trans
&kp ESC  &mt LEFT_GUI A  &mt LEFT_ALT S  &mt LEFT_SHIFT D  &mt LEFT_CONTROL F  &kp G                                  &kp H        &mt RIGHT_CONTROL J  &mt RIGHT_SHIFT K  &mt LEFT_ALT L  &mt RIGHT_WIN SEMI  &kp SQT
&trans   &kp Z           &kp X           &kp C             &kp V               &kp B                                  &kp N        &kp M                &kp COMMA          &kp DOT         &kp FSLH            &trans
                         &layer_ru       &layer_en         &mo 9               &lt 2 TAB  &lt 3 SPACE    &lt 4 ENTER  &shift_mo 5  &sen_mo 6            &kp LEFT_BRACKET   &kp GRAVE
            >;

            display-name = "en";
        };

        ru {
            display-name = "ru";
            bindings = <
&trans  &kp RU_CYRILLIC_SHORT_I  &kp RU_CYRILLIC_TSE  &kp RU_CYRILLIC_U   &kp RU_CYRILLIC_KA  &kp RU_CYRILLIC_IE                    &kp RU_CYRILLIC_EN  &kp RU_CYRILLIC_GHE        &kp RU_CYRILLIC_SHA  &kp RU_CYRILLIC_SHCHA  &kp RU_CYRILLIC_ZE  &kp RU_CYRILLIC_HA
&trans  &trans                   &trans               &trans              &trans              &kp RU_CYRILLIC_PE                    &kp RU_CYRILLIC_ER  &trans                     &trans               &trans                 &trans              &kp RU_CYRILLIC_E
&trans  &kp RU_CYRILLIC_YA       &kp RU_CYRILLIC_CHE  &kp RU_CYRILLIC_ES  &kp RU_CYRILLIC_EM  &kp RU_CYRILLIC_I                     &kp RU_CYRILLIC_TE  &kp RU_CYRILLIC_SOFT_SIGN  &kp RU_COMMA         &kp RU_DOT             &kp RU_CYRILLIC_BE  &kp RU_CYRILLIC_YU
                                 &trans               &trans              &en_mo 9            &trans              &trans    &trans  &shift_en_mo 5      &trans                     &trans               &trans
            >;
        };

        nav {
            bindings = <
&none  &none         &none         &none           &none             &none                            &kp SCROLLLOCK    &kp HOME  &kp UP      &kp END          &kp PG_UP      &none
&none  &kp LEFT_GUI  &kp LEFT_ALT  &kp LEFT_SHIFT  &kp LEFT_CONTROL  &none                            &kp RS(CAPSLOCK)  &kp LEFT  &kp DOWN    &kp RIGHT_ARROW  &kp PAGE_DOWN  &none
&none  &none         &none         &none           &none             &none                            &none             &mkp MB4  &kp C_MENU  &mkp MB5         &none          &none
                     &none         &none           &trans            &trans  &trans    &kp BACKSPACE  &kp DELETE        &trans    &none       &none
            >;

            display-name = "nav";
        };

        func {
            bindings = <
&none  &none   &none   &none   &none   &none                     &kp F7  &kp F8    &kp F9          &kp F10          &kp F11  &kp F12
&none  &trans  &trans  &trans  &trans  &none                     &kp F1  &kp F2    &kp F3          &kp F4           &kp F5   &kp F6
&none  &none   &none   &none   &none   &none                     &none   &kp CAPS  &kp KP_NUMLOCK  &kp PRINTSCREEN  &none    &none
               &none   &none   &trans  &trans  &trans    &trans  &trans  &trans    &none           &none
            >;
        };

        utils {
            bindings = <
&bt BT_CLR  &bt BT_SEL 4  &bt BT_SEL 3       &bt BT_SEL 2  &bt BT_SEL 1     &bt BT_SEL 0                    &none   &none              &none            &none         &none              &none
&none       &none         &kp C_VOLUME_DOWN  &kp C_MUTE    &kp C_VOLUME_UP  &out OUT_TOG                    &none   &kp RIGHT_CONTROL  &kp RIGHT_SHIFT  &kp LEFT_ALT  &kp RS(RIGHT_GUI)  &none
&none       &none         &none              &none         &none            &none                           &none   &none              &none            &none         &none              &none
                          &none              &none         &trans           &trans        &trans    &trans  &trans  &trans             &none            &none
            >;
        };

        sym {
            bindings = <
&kp GRAVE  &kp NUMBER_4  &kp N2     &kp N3  &kp SQT   &kp N6                         &none   &none              &none            &none         &none          &none
&none      &kp N1        &kp BSLH   &kp N7  &kp FSLH  &kp SEMI                       &none   &kp RIGHT_CONTROL  &kp RIGHT_SHIFT  &kp LEFT_ALT  &kp RIGHT_WIN  &none
&none      &kp LBKT      &kp COMMA  &kp N5  &kp DOT   &kp RBKT                       &none   &none              &none            &none         &none          &none
                         &none      &none   &kp N9    &kp N0    &kp MINUS    &trans  &trans  &trans             &none            &none
            >;

            display-name = "sym";
        };

        mouse {
            bindings = <
&none  &none     &none     &none     &none     &none                      &none   &none              &none            &none         &none          &none
&none  &mkp MB4  &mkp MB3  &mkp MB2  &mkp MB1  &mkp MB5                   &none   &kp RIGHT_CONTROL  &kp RIGHT_SHIFT  &kp LEFT_ALT  &kp RIGHT_WIN  &none
&none  &none     &none     &none     &none     &none                      &none   &none              &none            &none         &none          &none
                 &none     &none     &mo 7     &kp TAB   &mo 8    &trans  &trans  &trans             &none            &none
            >;
        };

        sniper {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans                    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans                    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans                    &trans  &trans  &trans  &trans  &trans  &trans
                &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans
            >;
        };

        scroll {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans                    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans                    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans                    &trans  &trans  &trans  &trans  &trans  &trans
                &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans
            >;
        };

        numeric {
            bindings = <
&none  &none         &none         &none           &none             &none                        &kp LBKT  &kp N7  &kp N8  &kp N9  &kp RBKT   &none
&none  &kp LEFT_GUI  &kp LEFT_ALT  &kp LEFT_SHIFT  &kp LEFT_CONTROL  &none                        &kp PLUS  &kp N4  &kp N5  &kp N6  &kp MINUS  &none
&none  &none         &none         &none           &none             &none                        &kp STAR  &kp N1  &kp N2  &kp N3  &kp FSLH   &kp BSLH
                     &none         &none           &trans            &trans  &trans    &kp EQUAL  &kp N0    &trans  &none   &none
            >;
        };
    };
};

&trackball { cpi = <1000>; };

&trackball_listener {
    input-processors = <&zip_xy_scaler 9 20>;

    scroller {
        layers = <7>;
        input-processors =
            <&zip_xy_transform INPUT_TRANSFORM_Y_INVERT>,
            <&zip_xy_scaler 1 32>,
            <&zip_xy_to_scroll_mapper>;
    };

    sniper {
        layers = <8>;
        input-processors = <&zip_xy_scaler 1 4>;
    };
};
